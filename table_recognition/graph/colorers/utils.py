from operator import itemgetter


def get_multiple_values_from_dict(dict: {}, keys: []) -> []:
    """
    Returns multiple values from dictionary with a single call.

    :param dict:  A dictionary that contains the wanted values.
    :param keys:  Keys that should be used to find the values in
                  the dictionary.
    :return:      A list with the wanted values.
    """
    if not keys:
        return []

    values = itemgetter(*keys)(dict)

    if type(values) is tuple:
        return list(values)
    else:
        return [values]


def range_wrapper(start_value: int, end_value: int) -> [int]:
    """
    Wrapper around builtin function range(). The function returns
    start_value when start_value == end_value.

    :param start_value: Start value for range()
    :param end_value:   End value for range()
    :return:            List of integers generated by range()
    """
    return list(range(start_value, end_value)) + [end_value]
